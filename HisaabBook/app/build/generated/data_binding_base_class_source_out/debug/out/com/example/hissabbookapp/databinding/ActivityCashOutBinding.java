// Generated by view binder compiler. Do not edit!
package com.example.hissabbookapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.hissabbookapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCashOutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAddMore;

  @NonNull
  public final Button btnSaveout;

  @NonNull
  public final CardView cardRecyclerSub;

  @NonNull
  public final TextView cashOutDate;

  @NonNull
  public final TextView cashOutTime;

  @NonNull
  public final EditText editAmountout;

  @NonNull
  public final TextView editMainRemarks;

  @NonNull
  public final EditText editRemarksout;

  @NonNull
  public final LinearLayout line;

  @NonNull
  public final LinearLayout linearViewRecord;

  @NonNull
  public final RecyclerView recyclerSub;

  @NonNull
  public final TextView totalAmountTextOut;

  private ActivityCashOutBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAddMore,
      @NonNull Button btnSaveout, @NonNull CardView cardRecyclerSub, @NonNull TextView cashOutDate,
      @NonNull TextView cashOutTime, @NonNull EditText editAmountout,
      @NonNull TextView editMainRemarks, @NonNull EditText editRemarksout,
      @NonNull LinearLayout line, @NonNull LinearLayout linearViewRecord,
      @NonNull RecyclerView recyclerSub, @NonNull TextView totalAmountTextOut) {
    this.rootView = rootView;
    this.btnAddMore = btnAddMore;
    this.btnSaveout = btnSaveout;
    this.cardRecyclerSub = cardRecyclerSub;
    this.cashOutDate = cashOutDate;
    this.cashOutTime = cashOutTime;
    this.editAmountout = editAmountout;
    this.editMainRemarks = editMainRemarks;
    this.editRemarksout = editRemarksout;
    this.line = line;
    this.linearViewRecord = linearViewRecord;
    this.recyclerSub = recyclerSub;
    this.totalAmountTextOut = totalAmountTextOut;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCashOutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCashOutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cash_out, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCashOutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddMore;
      Button btnAddMore = rootView.findViewById(id);
      if (btnAddMore == null) {
        break missingId;
      }

      id = R.id.btnSaveout;
      Button btnSaveout = rootView.findViewById(id);
      if (btnSaveout == null) {
        break missingId;
      }

      id = R.id.cardRecyclerSub;
      CardView cardRecyclerSub = rootView.findViewById(id);
      if (cardRecyclerSub == null) {
        break missingId;
      }

      id = R.id.cashOutDate;
      TextView cashOutDate = rootView.findViewById(id);
      if (cashOutDate == null) {
        break missingId;
      }

      id = R.id.cashOutTime;
      TextView cashOutTime = rootView.findViewById(id);
      if (cashOutTime == null) {
        break missingId;
      }

      id = R.id.editAmountout;
      EditText editAmountout = rootView.findViewById(id);
      if (editAmountout == null) {
        break missingId;
      }

      id = R.id.editMainRemarks;
      TextView editMainRemarks = rootView.findViewById(id);
      if (editMainRemarks == null) {
        break missingId;
      }

      id = R.id.editRemarksout;
      EditText editRemarksout = rootView.findViewById(id);
      if (editRemarksout == null) {
        break missingId;
      }

      id = R.id.line;
      LinearLayout line = rootView.findViewById(id);
      if (line == null) {
        break missingId;
      }

      id = R.id.linearViewRecord;
      LinearLayout linearViewRecord = rootView.findViewById(id);
      if (linearViewRecord == null) {
        break missingId;
      }

      id = R.id.recyclerSub;
      RecyclerView recyclerSub = rootView.findViewById(id);
      if (recyclerSub == null) {
        break missingId;
      }

      id = R.id.totalAmountTextOut;
      TextView totalAmountTextOut = rootView.findViewById(id);
      if (totalAmountTextOut == null) {
        break missingId;
      }

      return new ActivityCashOutBinding((ConstraintLayout) rootView, btnAddMore, btnSaveout,
          cardRecyclerSub, cashOutDate, cashOutTime, editAmountout, editMainRemarks, editRemarksout,
          line, linearViewRecord, recyclerSub, totalAmountTextOut);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
