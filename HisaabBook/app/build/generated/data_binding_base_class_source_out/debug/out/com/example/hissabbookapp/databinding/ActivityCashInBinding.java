// Generated by view binder compiler. Do not edit!
package com.example.hissabbookapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.hissabbookapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCashInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAddMore;

  @NonNull
  public final Button btnAddSub;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final CardView cardRecyclerSub;

  @NonNull
  public final TextView cashInDate;

  @NonNull
  public final TextView cashInTime;

  @NonNull
  public final EditText editAmount;

  @NonNull
  public final EditText editMainRemarks;

  @NonNull
  public final EditText editRemarks;

  @NonNull
  public final View line;

  @NonNull
  public final View line1;

  @NonNull
  public final LinearLayout linearViewRecord;

  @NonNull
  public final LinearLayout linearaddrecord;

  @NonNull
  public final RecyclerView recyclerSub;

  @NonNull
  public final TextView totalAmountTextIn;

  private ActivityCashInBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAddMore,
      @NonNull Button btnAddSub, @NonNull Button btnSave, @NonNull CardView cardRecyclerSub,
      @NonNull TextView cashInDate, @NonNull TextView cashInTime, @NonNull EditText editAmount,
      @NonNull EditText editMainRemarks, @NonNull EditText editRemarks, @NonNull View line,
      @NonNull View line1, @NonNull LinearLayout linearViewRecord,
      @NonNull LinearLayout linearaddrecord, @NonNull RecyclerView recyclerSub,
      @NonNull TextView totalAmountTextIn) {
    this.rootView = rootView;
    this.btnAddMore = btnAddMore;
    this.btnAddSub = btnAddSub;
    this.btnSave = btnSave;
    this.cardRecyclerSub = cardRecyclerSub;
    this.cashInDate = cashInDate;
    this.cashInTime = cashInTime;
    this.editAmount = editAmount;
    this.editMainRemarks = editMainRemarks;
    this.editRemarks = editRemarks;
    this.line = line;
    this.line1 = line1;
    this.linearViewRecord = linearViewRecord;
    this.linearaddrecord = linearaddrecord;
    this.recyclerSub = recyclerSub;
    this.totalAmountTextIn = totalAmountTextIn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCashInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCashInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cash_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCashInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddMore;
      Button btnAddMore = rootView.findViewById(id);
      if (btnAddMore == null) {
        break missingId;
      }

      id = R.id.btnAddSub;
      Button btnAddSub = rootView.findViewById(id);
      if (btnAddSub == null) {
        break missingId;
      }

      id = R.id.btnSave;
      Button btnSave = rootView.findViewById(id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.cardRecyclerSub;
      CardView cardRecyclerSub = rootView.findViewById(id);
      if (cardRecyclerSub == null) {
        break missingId;
      }

      id = R.id.cashInDate;
      TextView cashInDate = rootView.findViewById(id);
      if (cashInDate == null) {
        break missingId;
      }

      id = R.id.cashInTime;
      TextView cashInTime = rootView.findViewById(id);
      if (cashInTime == null) {
        break missingId;
      }

      id = R.id.editAmount;
      EditText editAmount = rootView.findViewById(id);
      if (editAmount == null) {
        break missingId;
      }

      id = R.id.editMainRemarks;
      EditText editMainRemarks = rootView.findViewById(id);
      if (editMainRemarks == null) {
        break missingId;
      }

      id = R.id.editRemarks;
      EditText editRemarks = rootView.findViewById(id);
      if (editRemarks == null) {
        break missingId;
      }

      id = R.id.line;
      View line = rootView.findViewById(id);
      if (line == null) {
        break missingId;
      }

      id = R.id.line1;
      View line1 = rootView.findViewById(id);
      if (line1 == null) {
        break missingId;
      }

      id = R.id.linearViewRecord;
      LinearLayout linearViewRecord = rootView.findViewById(id);
      if (linearViewRecord == null) {
        break missingId;
      }

      id = R.id.linearaddrecord;
      LinearLayout linearaddrecord = rootView.findViewById(id);
      if (linearaddrecord == null) {
        break missingId;
      }

      id = R.id.recyclerSub;
      RecyclerView recyclerSub = rootView.findViewById(id);
      if (recyclerSub == null) {
        break missingId;
      }

      id = R.id.totalAmountTextIn;
      TextView totalAmountTextIn = rootView.findViewById(id);
      if (totalAmountTextIn == null) {
        break missingId;
      }

      return new ActivityCashInBinding((ConstraintLayout) rootView, btnAddMore, btnAddSub, btnSave,
          cardRecyclerSub, cashInDate, cashInTime, editAmount, editMainRemarks, editRemarks, line,
          line1, linearViewRecord, linearaddrecord, recyclerSub, totalAmountTextIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
