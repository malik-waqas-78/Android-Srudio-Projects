// Generated by view binder compiler. Do not edit!
package com.example.hissabbookapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.hissabbookapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HistoryRecordItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView amountValue;

  @NonNull
  public final FrameLayout frame;

  @NonNull
  public final View line;

  @NonNull
  public final TextView remarkTag;

  @NonNull
  public final TextView texttime;

  @NonNull
  public final TextView totalBalance;

  private HistoryRecordItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView amountValue, @NonNull FrameLayout frame, @NonNull View line,
      @NonNull TextView remarkTag, @NonNull TextView texttime, @NonNull TextView totalBalance) {
    this.rootView = rootView;
    this.amountValue = amountValue;
    this.frame = frame;
    this.line = line;
    this.remarkTag = remarkTag;
    this.texttime = texttime;
    this.totalBalance = totalBalance;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HistoryRecordItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HistoryRecordItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.history_record_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HistoryRecordItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountValue;
      TextView amountValue = rootView.findViewById(id);
      if (amountValue == null) {
        break missingId;
      }

      id = R.id.frame;
      FrameLayout frame = rootView.findViewById(id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.line;
      View line = rootView.findViewById(id);
      if (line == null) {
        break missingId;
      }

      id = R.id.remarkTag;
      TextView remarkTag = rootView.findViewById(id);
      if (remarkTag == null) {
        break missingId;
      }

      id = R.id.texttime;
      TextView texttime = rootView.findViewById(id);
      if (texttime == null) {
        break missingId;
      }

      id = R.id.totalBalance;
      TextView totalBalance = rootView.findViewById(id);
      if (totalBalance == null) {
        break missingId;
      }

      return new HistoryRecordItemBinding((ConstraintLayout) rootView, amountValue, frame, line,
          remarkTag, texttime, totalBalance);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
