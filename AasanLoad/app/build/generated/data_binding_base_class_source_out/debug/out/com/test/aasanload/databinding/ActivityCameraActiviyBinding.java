// Generated by view binder compiler. Do not edit!
package com.test.aasanload.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.test.aasanload.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCameraActiviyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout btm;

  @NonNull
  public final PreviewView camera;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ConstraintLayout mid;

  @NonNull
  public final ConstraintLayout top;

  private ActivityCameraActiviyBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout btm, @NonNull PreviewView camera, @NonNull ImageView imageView,
      @NonNull ConstraintLayout mid, @NonNull ConstraintLayout top) {
    this.rootView = rootView;
    this.btm = btm;
    this.camera = camera;
    this.imageView = imageView;
    this.mid = mid;
    this.top = top;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCameraActiviyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCameraActiviyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_camera_activiy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCameraActiviyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btm;
      ConstraintLayout btm = ViewBindings.findChildViewById(rootView, id);
      if (btm == null) {
        break missingId;
      }

      id = R.id.camera;
      PreviewView camera = ViewBindings.findChildViewById(rootView, id);
      if (camera == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.mid;
      ConstraintLayout mid = ViewBindings.findChildViewById(rootView, id);
      if (mid == null) {
        break missingId;
      }

      id = R.id.top;
      ConstraintLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      return new ActivityCameraActiviyBinding((ConstraintLayout) rootView, btm, camera, imageView,
          mid, top);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
